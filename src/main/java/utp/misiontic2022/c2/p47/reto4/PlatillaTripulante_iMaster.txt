/*
 * Pueda usar esta plantilla para la carga del reto a iMaster
 * Copie las clases de los paquetes Modelo, Vista, Controlador y Util
 * No incluya los import de los archivos .java solo las clases
 */
// Importaciones necesarias en iMaster
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
//import java.text.DecimalFormat;
//import java.text.DecimalFormatSymbols;


// Util (No modificar)
class JDBCUtilities {
    private static final String DATABASE_LOCATION = "ProyectosConstruccion.db";

    public static Connection getConnection() throws SQLException {
        String url = "jdbc:sqlite:"+DATABASE_LOCATION;

        return DriverManager.getConnection(url);
    }
}

// Remplace en adelante por las clases de sus archivos .java

// Vista

public class vistaRequerimientosReto4 {

    public static final ControladorRequerimientos controlador = new ControladorRequerimientos();

    public static void requerimiento1(){

        System.out.println("Conocer el nombre, apellidos y salarios de los lideres cuyo segundo apellido sea 'Ortiz'");
        System.out.println("Nombre Primer_apellido Segundo_apellido Salario");
        try {
            ArrayList<Lider> resultado = controlador.consultarRequerimiento1();
            for (Lider lider:resultado){
                System.out.print(lider.getNombre()+" ");
                System.out.print(lider.getPrimer_Apellido()+" ");
                System.out.print(lider.getSegundo_Apellido()+" ");
                System.out.println(lider.getSalario());
            }
        } catch (Exception e) {
            System.err.println(e);
        }
    //}

   public static void requerimiento2(){
    System.out.println("Transformar y obtener el nombre de los lideres donde la primera letra sea en minúscula y las demás en mayúscula");
    System.out.println("Nombre");
        try {
            ArrayList<Transformar_Nombre> resultado = controlador.consultarRequerimiento2();
            for (Transformar_Nombre transformar:resultado){
                System.out.println(transformar.getTransformar());
            }
        } catch (Exception e) {
            System.err.println(e);
        }
    }

    public static void requerimiento3(){
        System.out.println("Saber la suma de los salarios de todos los lideres por su ciudad de residencia");
        System.out.println("Cargo Salario");
        try {
            ArrayList<Cargo_Salario> resultado = controlador.consultarRequerimiento3();
            for (Cargo_Salario Carsalario:resultado){
                System.out.print(Carsalario.getCargo()+" ");
                System.out.println(Carsalario.getSalario());
            }
        } catch (Exception e) {
            System.err.println(e);
        }
    }


    
}


// Controlador



public class ControladorRequerimientos {
    
    public ArrayList<Lider> consultarRequerimiento1() throws SQLException {
        LiderDao dao = new LiderDao();
        return dao.requerimiento1();
    }

    public ArrayList<Transformar_Nombre> consultarRequerimiento2() throws SQLException {
        TransformarDao dao = new TransformarDao();
        return dao.requerimiento2();
    }


    public ArrayList<Cargo_Salario> consultarRequerimiento3() throws SQLException {
        CargoDao dao = new CargoDao();
        return dao.requerimiento3();
    }
}


// Modelo
// VO

public class Lider {
    private String Nombre;
    private String Primer_Apellido;
    private String Segundo_Apellido;
    private Float Salario;

    public Lider(){

    }

    public String getNombre() {
        return Nombre;
    }

    public void setNombre(String nombre) {
        Nombre = nombre;
    }

    public String getPrimer_Apellido() {
        return Primer_Apellido;
    }
    public void setPrimer_Apellido(String primer_Apellido) {
        Primer_Apellido = primer_Apellido;
    }

    public String getSegundo_Apellido() {
        return Segundo_Apellido;
    }
    public void setSegundo_Apellido(String segundo_Apellido) {
        Segundo_Apellido = segundo_Apellido;
    }
    public float getSalario() {
        return Salario;
    }
    public void setSalario(float salario) {
        Salario = salario;
    }

}

public class Transformar_Nombre {
    private String Transformar;

    public Transformar_Nombre() {
    }

    public String getTransformar() {
        return Transformar;
    }
    public void setTransformar(String transformar) {
        Transformar = transformar;
    }
}


public class Cargo_Salario {
    private String Cargo;
    private Double Salario;
    
    public Cargo_Salario() {
    }

    public String getCargo() {
        return Cargo;
    }
    public void setCargo(String cargo) {
        Cargo = cargo;
    }

    public String getSalario() {
        DecimalFormatSymbols separadoresPersonalizados = new DecimalFormatSymbols();
        separadoresPersonalizados.setDecimalSeparator('.');
        DecimalFormat formato1 = new DecimalFormat("#.000000",separadoresPersonalizados);
        String Salario1 = formato1.format(Salario);
        return Salario1; 
    }
    public void setSalario(Double salario) {
        Salario = salario;
    }
    
}


// DAO

public class LiderDao {

    Connection conexion;

    public LiderDao(){
        try {
            conexion = JDBCUtilities.getConnection();
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

    public ArrayList<Lider> requerimiento1() throws SQLException {
        ArrayList<Lider> lista = new ArrayList<>();
        String sql = "select Nombre, Primer_Apellido,Segundo_Apellido, Salario from lider where Segundo_Apellido = 'Ortiz';";
        Statement pstm = conexion.createStatement();
        ResultSet resultados = pstm.executeQuery(sql);
        while(resultados.next()){
            Lider lider = new Lider();
            lider.setNombre(resultados.getString("Nombre"));
            lider.setPrimer_Apellido(resultados.getString("Primer_Apellido"));
            lider.setSegundo_Apellido(resultados.getString("Segundo_Apellido"));
            lider.setSalario(resultados.getFloat("Salario"));
            lista.add(lider);
        }
        return lista;
    }
}


public class TransformarDao {
    Connection conexion;

    public TransformarDao(){
        try {
            conexion = JDBCUtilities.getConnection();
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

    public ArrayList<Transformar_Nombre> requerimiento2() throws SQLException {
        ArrayList<Transformar_Nombre> lista = new ArrayList<>();
        String sql = "select LOWER(SUBSTR(Nombre,1,1)) || UPPER(SUBSTR(Nombre,2,LENGTH(Nombre))) as Transformar from Lider;";
        Statement pstm = conexion.createStatement();
        ResultSet resultados = pstm.executeQuery(sql);
        while(resultados.next()){
            Transformar_Nombre tranformar = new Transformar_Nombre();
            tranformar.setTransformar(resultados.getString("Transformar"));
            lista.add(tranformar);
        }
        return lista;
    }
    
}



public class CargoDao {
    
    Connection conexion;

    public CargoDao(){
        try {
            conexion = JDBCUtilities.getConnection();
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }

    public ArrayList<Cargo_Salario> requerimiento3() throws SQLException {
        ArrayList<Cargo_Salario> lista = new ArrayList<>();
        String sql = "select cargo, avg(Salario) as Salario from Lider  group by Cargo having avg(salario)>500000 order by Cargo;";
        Statement pstm = conexion.createStatement();
        ResultSet resultados = pstm.executeQuery(sql);
        while(resultados.next()){
            Cargo_Salario CSalario = new Cargo_Salario();
            CSalario.setCargo(resultados.getString("Cargo"));
            CSalario.setSalario(resultados.getDouble("Salario"));
            lista.add(CSalario);
        }
        return lista;
    }